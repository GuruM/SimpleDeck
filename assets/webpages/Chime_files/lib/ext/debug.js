// Generated by CoffeeScript 1.6.3
var AssertException, analytics_script, assert, d, initGA, log_error, milestone, throw_assert, track, _gaq;

AssertException = function(message) {
  this.message = message;
};

AssertException.prototype.toString = function() {
  return 'AssertException: ' + this.message;
};

assert = function(statement, message) {
  if (!statement) {
    throw_assert(message);
  }
};

throw_assert = function(message) {
  throw new AssertException(message);
};

log_error = function(message) {};

milestone = function(description) {
  return console.log(("" + (new Date()) + " | Milestone: ") + description);
};

d = window.document;

analytics_script = 'https://ssl.google-analytics.com/ga.js';

_gaq = [['_setAccount', 'UA-33190326-1'], ['_trackPageview']];

initGA = function(page) {
  var e, s, src;
  src = analytics_script;
  s = d.createElement('script');
  s.async = true;
  s.src = src;
  e = (d.getElementsByTagName('script')[0]);
  e.parentNode.insertBefore(s, e);
  track('init', page);
};

track = function(category, action, label, value) {
  if (label == null) {
    label = "";
  }
  if (value == null) {
    value = 0;
  }
  _gaq.push(['_trackEvent', category, action, label, value]);
};

window.onerror = function(errorMsg, url, lineNumber) {
  var msg;
  msg = "" + errorMsg + " at " + url + ":" + lineNumber;
  console.log("Error found " + errorMsg + " at " + url + ":" + lineNumber);
  track('error', msg);
  return false;
};

/*
init_error_listener = () ->

	chrome.extension.onRequest.addListener (request, sender, sendResponse)->

		return if (request.msgtype != "assert" or request.msgtype != "milestone")

		#Give URL from contentscript
		if (request.msgtype == "assert" )
			assert (false,request.description)
		else if (request.msgtype == "milestone" )
			milestone (request.description)

		sendResponse({})
*/

