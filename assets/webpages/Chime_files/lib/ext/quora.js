// Generated by CoffeeScript 1.6.3
var QuoraNotification,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

QuoraNotification = (function(_super) {
  __extends(QuoraNotification, _super);

  function QuoraNotification(description, url, time, unread) {
    var count, note, text, type;
    this.description = description;
    this.url = url;
    this.time = time;
    this.unread = unread;
    type = description['type'];
    if (type === 'inbox') {
      count = description['count'];
      note = "Quora: " + count + " new message";
      if (count > 1) {
        note += 's';
      }
      this.body = "<span class='unimportant'>" + note + "</span>";
      this.title = note;
    } else {
      text = description['text'];
      this.body = "<span class='unimportant'>" + text + "</span>";
      this.title = text;
    }
    this.message_body = "";
    this.icon_name = "icon.quora.png";
    this.time = null;
    this.url = url;
    this.unread = unread;
    this.site = QuoraSite.instance;
    QuoraNotification.__super__.constructor.call(this);
  }

  QuoraNotification.prototype.updateAttr = function(newattr) {
    QuoraNotification.__super__.updateAttr.call(this, newattr);
  };

  return QuoraNotification;

})(Notification);

this.QuoraSite = (function(_super) {
  __extends(QuoraSite, _super);

  QuoraSite.instance = null;

  QuoraSite.prototype.last_unread_count = -1;

  function QuoraSite() {
    this.name = "quora";
    this.notif_description = ["notifications", "messages"];
    this.domain = "api.quora.com";
    this.cookiedomain = ".quora.com";
    this.loginurl = "http://www.quora.com/login/index/";
    this.callbackurl = ["http://api.quora.com/api/logged_in_user?fields=inbox,notifs"];
    this.option_feed_type = FeedType.JSON;
    this.option_slow_check = true;
    QuoraSite.__super__.constructor.apply(this, arguments);
    QuoraSite.instance = this;
  }

  QuoraSite.prototype.checkCookie = function(changeInfo) {
    var cookiematch;
    cookiematch = {
      name: 'm-tz',
      cause: ['overwrite']
    };
    QuoraSite.__super__.checkCookie.call(this, cookiematch, changeInfo);
  };

  QuoraSite.prototype.checkLoggedIn = function(callbackfunc) {
    return callbackfunc(LoadStatusCodes.OK);
  };

  QuoraSite.prototype.parse = function(jsonobj) {
    var date, description, err, inbox_count, inbox_notif, notif, notifications, notifs, parseNotification, responsestatus, unread, url, _i, _len;
    parseNotification = function(jsonobj) {
      var date, description, err, notif, obj, objs, temp_url, text, unread, url, _i, _len;
      try {
        jsonobj = "<div>" + jsonobj + "</div>";
        notif = $(jsonobj);
        objs = notif.find("a[href^='\#']");
        for (_i = 0, _len = objs.length; _i < _len; _i++) {
          obj = objs[_i];
          $(objs).remove();
        }
        url = notif.find('a:first').attr('href');
        temp_url = notif.find('a:eq(1)').attr('href');
        if (typeof temp_url !== "undefined") {
          url = temp_url;
        }
        text = notif.text();
        unread = true;
        date = null;
        description = {
          text: text,
          type: 'notification'
        };
      } catch (_error) {
        err = _error;
        console.log(err.message);
      }
      return new QuoraNotification(description, url, date, unread);
    };
    notifications = new Array();
    try {
      if (jsonobj === null) {
        responsestatus = LoadStatusCodes.UNAUTHORIZED;
      } else {
        notifs = jsonobj.notifs.unseen;
        inbox_count = jsonobj.inbox.unread_count;
        if (inbox_count > 0) {
          description = {
            count: inbox_count,
            type: 'inbox'
          };
          url = 'http://www.quora.com/inbox';
          date = null;
          unread = true;
          inbox_notif = new QuoraNotification(description, url, date, unread);
          notifications.push(inbox_notif);
        }
        for (_i = 0, _len = notifs.length; _i < _len; _i++) {
          notif = notifs[_i];
          notifications.push(parseNotification(notif));
        }
        responsestatus = LoadStatusCodes.OK;
      }
    } catch (_error) {
      err = _error;
      console.log(err);
      responsestatus = LoadStatusCodes.ERROR;
    }
    return [responsestatus, notifications];
  };

  QuoraSite.prototype.merge_notifications = function(new_notifs) {
    var notif, notifs, size;
    size = new_notifs;
    notifs = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = new_notifs.length; _i < _len; _i++) {
        notif = new_notifs[_i];
        _results.push(new QuoraNotification(notif.description, notif.url, new Date(notif.time), notif.unread));
      }
      return _results;
    })();
    return QuoraSite.__super__.merge_notifications.call(this, notifs);
  };

  return QuoraSite;

})(Site);
