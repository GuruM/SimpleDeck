// Generated by CoffeeScript 1.6.3
var GplusNotification,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

GplusNotification = (function(_super) {
  __extends(GplusNotification, _super);

  function GplusNotification(description, url, time, unread) {
    this.description = description;
    this.url = url;
    this.time = time;
    this.unread = unread;
    this.body = "" + description.count + " new Google+ " + description.suffix;
    this.time = null;
    this.url = url;
    this.unread = unread;
    this.site = GplusSite.instance;
    this.title = this.body;
    this.message_body = "";
    this.icon_name = "icon.gplus.png";
    GplusNotification.__super__.constructor.call(this);
  }

  GplusNotification.prototype.markAsRead = function(read) {
    GplusNotification.__super__.markAsRead.call(this, read);
    $.get('https://plus.google.com/app/plus/x/all/?v=notifications', null);
  };

  return GplusNotification;

})(Notification);

this.GplusSite = (function(_super) {
  __extends(GplusSite, _super);

  GplusSite.instance = null;

  function GplusSite() {
    this.name = "gplus";
    this.notif_description = ["notifications"];
    this.domain = "plus.google.com";
    this.cookiedomain = '.google.com';
    this.loginurl = "https://accounts.google.com/ServiceLogin?service=oz&continue=https://plus.google.com";
    this.callbackurl = ["https://plus.google.com/app/plus/x/all/?v=notifications"];
    this.testurl = null;
    this.jsonurl = null;
    this.option_feed_type = FeedType.XHTTP;
    this.option_mark_read = true;
    GplusSite.__super__.constructor.apply(this, arguments);
    GplusSite.instance = this;
  }

  GplusSite.prototype.checkCookie = function(changeInfo) {
    var cookiematch;
    cookiematch = {
      name: 'HSID',
      cause: ['explicit', 'expired_overwrite']
    };
    return GplusSite.__super__.checkCookie.call(this, cookiematch, changeInfo);
  };

  GplusSite.prototype.checkLoggedIn = function(callbackfunc) {
    var cookie_details;
    cookie_details = {
      url: 'https://plus.google.com/app/basic/home',
      name: 'HSID'
    };
    return GplusSite.__super__.checkLoggedIn.call(this, cookie_details, callbackfunc);
  };

  GplusSite.prototype.extractUniqueID = function(str) {
    var beginIndex, endIndex, uniqueID;
    beginIndex = str.search(/cbp=/);
    endIndex = str.search(/&spath/);
    if (beginIndex !== -1) {
      return uniqueID = str.slice(beginIndex + 4, +(endIndex - 1) + 1 || 9e9);
    } else {
      beginIndex = str.search(/cnpids=/);
      endIndex = str.search(/%/);
      return uniqueID = str.slice(beginIndex + 7, +(endIndex - 1) + 1 || 9e9);
    }
  };

  GplusSite.prototype.parse = function(body) {
    var count, date, description, elements, err, htmlelement, notif, notifications, responsestatus, suffix, unread, url;
    notifications = new Array();
    try {
      elements = body.children();
      htmlelement = elements[0];
      count = parseInt($(htmlelement).find('tr td').text());
      count = count >= 0 ? count : 0;
      suffix = count === 1 ? 'notification' : 'notifications';
      description = {
        count: count,
        suffix: suffix
      };
      unread = count > 0 ? true : false;
      url = "https://plus.google.com/u/0/notifications";
      date = null;
      notif = new GplusNotification(description, url, date, unread);
      notifications.push(notif);
      /*
      			elements = body.children() #body.find('tr[style="height:35px"]')
      			elements = elements[2..elements.length-3] #remove header and css footer divs
      
      			elements.each (i, htmlelement) =>
      				element = $(htmlelement).parent()[0]
      
      				#read/unread status by finding number of classes
      				num_classes = element.className.toString().split(' ').length
      				unread = if num_classes is 2 then true else false
      				
      				#description
      				description = $(element).find('td a').text().trim()
      
      				#url
      				uniqueID = @extractUniqueID($(element).find('td a').attr('href'))
      				url = "https://plus.google.com/u/0/notifications/#{uniqueID}"
      				
      				date = null
      				notif = new GplusNotification description, url, date, unread
      				notifications.push notif
      */

      responsestatus = LoadStatusCodes.OK;
    } catch (_error) {
      err = _error;
      console.log(err);
      responsestatus = LoadStatusCodes.ERROR;
    }
    return [responsestatus, notifications];
  };

  GplusSite.prototype.merge_notifications = function(new_notifs) {
    var notif, notifs;
    notifs = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = new_notifs.length; _i < _len; _i++) {
        notif = new_notifs[_i];
        _results.push(new GplusNotification(notif.description, notif.url, new Date(notif.time), notif.unread));
      }
      return _results;
    })();
    return GplusSite.__super__.merge_notifications.call(this, notifs);
  };

  return GplusSite;

})(Site);
